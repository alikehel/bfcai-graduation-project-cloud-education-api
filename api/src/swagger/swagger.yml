openapi: 3.0.0
info:
    title: Cloud Education API
    version: 1.0.0
servers:
    # Added by API Auto Mocking Plugin
    -   url: https://virtserver.swaggerhub.com/alisaber272/cloud-education/1.0.0
        description: Cloud Education API Auto Mocking
    # -   url: https://virtserver.swaggerhub.com/alisaber272/cloud-education/1.0.0
    #     description: Cloud Education API ( Production )
paths:
    /organization/create:
        post:
            summary: Create a new organization and admin user
            operationId: createOrganizationAndAdmin
            requestBody:
                description: Request body containing organization and admin information
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                organization:
                                    $ref: "#/components/schemas/OrganizationSignUpSchema"
                                admin:
                                    $ref: "#/components/schemas/UserSignUpSchema"
            responses:
                "200":
                    description: Redirects to the login page for the created organization
                "400":
                    description: Bad request
    /{organization}/auth/signup:
        post:
            summary: 'Signup user'
            parameters:
                - in: path
                  name: organization
                  required: true
                  schema:
                      type: string
            requestBody:
                description: Request body containing user information
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserSignUpSchema"
            responses:
                '201':
                    $ref: "#/components/responses/loginSuccess"

    /{organization}/auth/login:
        post:
            summary: "Login user"
            parameters:
                - in: path
                  name: organization
                  required: true
                  schema:
                    type: string
            requestBody:
                description: Request body containing user information
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserLoginSchema"
            responses:
                "201":
                    $ref: "#/components/responses/loginSuccess"

components:
    schemas:
        UserSignUpSchema:
            type: object
            properties:
                email:
                    type: string
                    format: email
                    description: User email
                    example: example@example.com
                password:
                    type: string
                    description: User password
                    minLength: 6
                    maxLength: 12
                    example: password
                passwordConfirm:
                    type: string
                    description: User password confirmation
                    minLength: 6
                    maxLength: 12
                    example: password
                firstName:
                    type: string
                    description: User first name
                    minLength: 2
                    maxLength: 16
                    example: John
                lastName:
                    type: string
                    description: User last name
                    minLength: 2
                    maxLength: 16
                    example: Doe
                phoneNumber:
                    type: string
                    description: User phone number with country code
                    pattern: ^\+20\d{10}$
                    example: +201234567890
                role:
                    type: string
                    description: User role (optional)
                    example: admin
        OrganizationSignUpSchema:
            type: object
            properties:
                name:
                    type: string
                    description: Organization name
                    example: Example Inc.
                type:
                    type: string
                    description: Organization type
                    example: Corporation
                emailDomain:
                    type: string
                    description: Email domain for the organization
                    example: example.com
                subdomain:
                    type: string
                    description: Subdomain for the organization
                    minLength: 2
                    maxLength: 16
                    example: example
                officialPhoneNumber:
                    type: string
                    description: Official phone number for the organization with country code
                    pattern: ^\+20\d{10}$
                    example: +201234567890
                country:
                    type: string
                    description: Country of the organization
                    example: Egypt
                address:
                    type: string
                    description: Address of the organization
                    example: 123 Main St, Cairo
        UserLoginSchema:
            type: object
            properties:
                email:
                    type: string
                    format: email
                    description: User email
                    example: example@example.com
                password:
                    type: string
                    description: User password
                    minLength: 6
                    maxLength: 12
                    example: password
    responses:
        'loginSuccess':
            description: Created
            content:
                application/json:
                    schema:
                        properties:
                            message:
                                type: string
                                example: "success"
                            token:
                                type: string
